/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-01-08 17:48:37 UTC)
 * on 2016-02-19 at 11:13:16 UTC 
 * Modify at your own risk.
 */

package com.sporthorsetech.www.horseApi;

/**
 * Service definition for HorseApi (v1).
 *
 * <p>
 * Sport Horse Tech API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link HorseApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class HorseApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.21.0 of the horseApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://sporthorsetech.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "horseApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public HorseApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  HorseApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "checkAccount".
   *
   * This request holds the parameters needed by the horseApi server.  After setting any optional
   * parameters, call the {@link CheckAccount#execute()} method to invoke the remote operation.
   *
   * @param ownerEmail
   * @return the request
   */
  public CheckAccount checkAccount(java.lang.String ownerEmail) throws java.io.IOException {
    CheckAccount result = new CheckAccount(ownerEmail);
    initialize(result);
    return result;
  }

  public class CheckAccount extends HorseApiRequest<com.sporthorsetech.www.horseApi.model.Account> {

    private static final String REST_PATH = "horse/{ownerEmail}";

    /**
     * Create a request for the method "checkAccount".
     *
     * This request holds the parameters needed by the the horseApi server.  After setting any
     * optional parameters, call the {@link CheckAccount#execute()} method to invoke the remote
     * operation. <p> {@link
     * CheckAccount#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param ownerEmail
     * @since 1.13
     */
    protected CheckAccount(java.lang.String ownerEmail) {
      super(HorseApi.this, "POST", REST_PATH, null, com.sporthorsetech.www.horseApi.model.Account.class);
      this.ownerEmail = com.google.api.client.util.Preconditions.checkNotNull(ownerEmail, "Required parameter ownerEmail must be specified.");
    }

    @Override
    public CheckAccount setAlt(java.lang.String alt) {
      return (CheckAccount) super.setAlt(alt);
    }

    @Override
    public CheckAccount setFields(java.lang.String fields) {
      return (CheckAccount) super.setFields(fields);
    }

    @Override
    public CheckAccount setKey(java.lang.String key) {
      return (CheckAccount) super.setKey(key);
    }

    @Override
    public CheckAccount setOauthToken(java.lang.String oauthToken) {
      return (CheckAccount) super.setOauthToken(oauthToken);
    }

    @Override
    public CheckAccount setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CheckAccount) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CheckAccount setQuotaUser(java.lang.String quotaUser) {
      return (CheckAccount) super.setQuotaUser(quotaUser);
    }

    @Override
    public CheckAccount setUserIp(java.lang.String userIp) {
      return (CheckAccount) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String ownerEmail;

    /**

     */
    public java.lang.String getOwnerEmail() {
      return ownerEmail;
    }

    public CheckAccount setOwnerEmail(java.lang.String ownerEmail) {
      this.ownerEmail = ownerEmail;
      return this;
    }

    @Override
    public CheckAccount set(String parameterName, Object value) {
      return (CheckAccount) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getHorse".
   *
   * This request holds the parameters needed by the horseApi server.  After setting any optional
   * parameters, call the {@link GetHorse#execute()} method to invoke the remote operation.
   *
   * @param horseName
   * @param ownerEmail
   * @return the request
   */
  public GetHorse getHorse(java.lang.String horseName, java.lang.String ownerEmail) throws java.io.IOException {
    GetHorse result = new GetHorse(horseName, ownerEmail);
    initialize(result);
    return result;
  }

  public class GetHorse extends HorseApiRequest<com.sporthorsetech.www.horseApi.model.Horse> {

    private static final String REST_PATH = "horse/{id}";

    /**
     * Create a request for the method "getHorse".
     *
     * This request holds the parameters needed by the the horseApi server.  After setting any
     * optional parameters, call the {@link GetHorse#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetHorse#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param horseName
     * @param ownerEmail
     * @since 1.13
     */
    protected GetHorse(java.lang.String horseName, java.lang.String ownerEmail) {
      super(HorseApi.this, "GET", REST_PATH, null, com.sporthorsetech.www.horseApi.model.Horse.class);
      this.horseName = com.google.api.client.util.Preconditions.checkNotNull(horseName, "Required parameter horseName must be specified.");
      this.ownerEmail = com.google.api.client.util.Preconditions.checkNotNull(ownerEmail, "Required parameter ownerEmail must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetHorse setAlt(java.lang.String alt) {
      return (GetHorse) super.setAlt(alt);
    }

    @Override
    public GetHorse setFields(java.lang.String fields) {
      return (GetHorse) super.setFields(fields);
    }

    @Override
    public GetHorse setKey(java.lang.String key) {
      return (GetHorse) super.setKey(key);
    }

    @Override
    public GetHorse setOauthToken(java.lang.String oauthToken) {
      return (GetHorse) super.setOauthToken(oauthToken);
    }

    @Override
    public GetHorse setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetHorse) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetHorse setQuotaUser(java.lang.String quotaUser) {
      return (GetHorse) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetHorse setUserIp(java.lang.String userIp) {
      return (GetHorse) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String horseName;

    /**

     */
    public java.lang.String getHorseName() {
      return horseName;
    }

    public GetHorse setHorseName(java.lang.String horseName) {
      this.horseName = horseName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String ownerEmail;

    /**

     */
    public java.lang.String getOwnerEmail() {
      return ownerEmail;
    }

    public GetHorse setOwnerEmail(java.lang.String ownerEmail) {
      this.ownerEmail = ownerEmail;
      return this;
    }

    @Override
    public GetHorse set(String parameterName, Object value) {
      return (GetHorse) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getHorses".
   *
   * This request holds the parameters needed by the horseApi server.  After setting any optional
   * parameters, call the {@link GetHorses#execute()} method to invoke the remote operation.
   *
   * @param ownerEmail
   * @return the request
   */
  public GetHorses getHorses(java.lang.String ownerEmail) throws java.io.IOException {
    GetHorses result = new GetHorses(ownerEmail);
    initialize(result);
    return result;
  }

  public class GetHorses extends HorseApiRequest<com.sporthorsetech.www.horseApi.model.HorseCollection> {

    private static final String REST_PATH = "horse";

    /**
     * Create a request for the method "getHorses".
     *
     * This request holds the parameters needed by the the horseApi server.  After setting any
     * optional parameters, call the {@link GetHorses#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetHorses#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param ownerEmail
     * @since 1.13
     */
    protected GetHorses(java.lang.String ownerEmail) {
      super(HorseApi.this, "GET", REST_PATH, null, com.sporthorsetech.www.horseApi.model.HorseCollection.class);
      this.ownerEmail = com.google.api.client.util.Preconditions.checkNotNull(ownerEmail, "Required parameter ownerEmail must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetHorses setAlt(java.lang.String alt) {
      return (GetHorses) super.setAlt(alt);
    }

    @Override
    public GetHorses setFields(java.lang.String fields) {
      return (GetHorses) super.setFields(fields);
    }

    @Override
    public GetHorses setKey(java.lang.String key) {
      return (GetHorses) super.setKey(key);
    }

    @Override
    public GetHorses setOauthToken(java.lang.String oauthToken) {
      return (GetHorses) super.setOauthToken(oauthToken);
    }

    @Override
    public GetHorses setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetHorses) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetHorses setQuotaUser(java.lang.String quotaUser) {
      return (GetHorses) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetHorses setUserIp(java.lang.String userIp) {
      return (GetHorses) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String ownerEmail;

    /**

     */
    public java.lang.String getOwnerEmail() {
      return ownerEmail;
    }

    public GetHorses setOwnerEmail(java.lang.String ownerEmail) {
      this.ownerEmail = ownerEmail;
      return this;
    }

    @Override
    public GetHorses set(String parameterName, Object value) {
      return (GetHorses) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getOwner".
   *
   * This request holds the parameters needed by the horseApi server.  After setting any optional
   * parameters, call the {@link GetOwner#execute()} method to invoke the remote operation.
   *
   * @param ownerEmail
   * @return the request
   */
  public GetOwner getOwner(java.lang.String ownerEmail) throws java.io.IOException {
    GetOwner result = new GetOwner(ownerEmail);
    initialize(result);
    return result;
  }

  public class GetOwner extends HorseApiRequest<com.sporthorsetech.www.horseApi.model.Owner> {

    private static final String REST_PATH = "owner/{id}";

    /**
     * Create a request for the method "getOwner".
     *
     * This request holds the parameters needed by the the horseApi server.  After setting any
     * optional parameters, call the {@link GetOwner#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetOwner#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param ownerEmail
     * @since 1.13
     */
    protected GetOwner(java.lang.String ownerEmail) {
      super(HorseApi.this, "GET", REST_PATH, null, com.sporthorsetech.www.horseApi.model.Owner.class);
      this.ownerEmail = com.google.api.client.util.Preconditions.checkNotNull(ownerEmail, "Required parameter ownerEmail must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetOwner setAlt(java.lang.String alt) {
      return (GetOwner) super.setAlt(alt);
    }

    @Override
    public GetOwner setFields(java.lang.String fields) {
      return (GetOwner) super.setFields(fields);
    }

    @Override
    public GetOwner setKey(java.lang.String key) {
      return (GetOwner) super.setKey(key);
    }

    @Override
    public GetOwner setOauthToken(java.lang.String oauthToken) {
      return (GetOwner) super.setOauthToken(oauthToken);
    }

    @Override
    public GetOwner setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetOwner) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetOwner setQuotaUser(java.lang.String quotaUser) {
      return (GetOwner) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetOwner setUserIp(java.lang.String userIp) {
      return (GetOwner) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String ownerEmail;

    /**

     */
    public java.lang.String getOwnerEmail() {
      return ownerEmail;
    }

    public GetOwner setOwnerEmail(java.lang.String ownerEmail) {
      this.ownerEmail = ownerEmail;
      return this;
    }

    @Override
    public GetOwner set(String parameterName, Object value) {
      return (GetOwner) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertHorse".
   *
   * This request holds the parameters needed by the horseApi server.  After setting any optional
   * parameters, call the {@link InsertHorse#execute()} method to invoke the remote operation.
   *
   * @param ownerEmail
   * @param content the {@link com.sporthorsetech.www.horseApi.model.Horse}
   * @return the request
   */
  public InsertHorse insertHorse(java.lang.String ownerEmail, com.sporthorsetech.www.horseApi.model.Horse content) throws java.io.IOException {
    InsertHorse result = new InsertHorse(ownerEmail, content);
    initialize(result);
    return result;
  }

  public class InsertHorse extends HorseApiRequest<Void> {

    private static final String REST_PATH = "horse";

    /**
     * Create a request for the method "insertHorse".
     *
     * This request holds the parameters needed by the the horseApi server.  After setting any
     * optional parameters, call the {@link InsertHorse#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertHorse#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param ownerEmail
     * @param content the {@link com.sporthorsetech.www.horseApi.model.Horse}
     * @since 1.13
     */
    protected InsertHorse(java.lang.String ownerEmail, com.sporthorsetech.www.horseApi.model.Horse content) {
      super(HorseApi.this, "POST", REST_PATH, content, Void.class);
      this.ownerEmail = com.google.api.client.util.Preconditions.checkNotNull(ownerEmail, "Required parameter ownerEmail must be specified.");
    }

    @Override
    public InsertHorse setAlt(java.lang.String alt) {
      return (InsertHorse) super.setAlt(alt);
    }

    @Override
    public InsertHorse setFields(java.lang.String fields) {
      return (InsertHorse) super.setFields(fields);
    }

    @Override
    public InsertHorse setKey(java.lang.String key) {
      return (InsertHorse) super.setKey(key);
    }

    @Override
    public InsertHorse setOauthToken(java.lang.String oauthToken) {
      return (InsertHorse) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertHorse setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertHorse) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertHorse setQuotaUser(java.lang.String quotaUser) {
      return (InsertHorse) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertHorse setUserIp(java.lang.String userIp) {
      return (InsertHorse) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String ownerEmail;

    /**

     */
    public java.lang.String getOwnerEmail() {
      return ownerEmail;
    }

    public InsertHorse setOwnerEmail(java.lang.String ownerEmail) {
      this.ownerEmail = ownerEmail;
      return this;
    }

    @Override
    public InsertHorse set(String parameterName, Object value) {
      return (InsertHorse) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "register".
   *
   * This request holds the parameters needed by the horseApi server.  After setting any optional
   * parameters, call the {@link Register#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.sporthorsetech.www.horseApi.model.Owner}
   * @return the request
   */
  public Register register(com.sporthorsetech.www.horseApi.model.Owner content) throws java.io.IOException {
    Register result = new Register(content);
    initialize(result);
    return result;
  }

  public class Register extends HorseApiRequest<Void> {

    private static final String REST_PATH = "owner";

    /**
     * Create a request for the method "register".
     *
     * This request holds the parameters needed by the the horseApi server.  After setting any
     * optional parameters, call the {@link Register#execute()} method to invoke the remote operation.
     * <p> {@link
     * Register#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.sporthorsetech.www.horseApi.model.Owner}
     * @since 1.13
     */
    protected Register(com.sporthorsetech.www.horseApi.model.Owner content) {
      super(HorseApi.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public Register setAlt(java.lang.String alt) {
      return (Register) super.setAlt(alt);
    }

    @Override
    public Register setFields(java.lang.String fields) {
      return (Register) super.setFields(fields);
    }

    @Override
    public Register setKey(java.lang.String key) {
      return (Register) super.setKey(key);
    }

    @Override
    public Register setOauthToken(java.lang.String oauthToken) {
      return (Register) super.setOauthToken(oauthToken);
    }

    @Override
    public Register setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Register) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Register setQuotaUser(java.lang.String quotaUser) {
      return (Register) super.setQuotaUser(quotaUser);
    }

    @Override
    public Register setUserIp(java.lang.String userIp) {
      return (Register) super.setUserIp(userIp);
    }

    @Override
    public Register set(String parameterName, Object value) {
      return (Register) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link HorseApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link HorseApi}. */
    @Override
    public HorseApi build() {
      return new HorseApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link HorseApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setHorseApiRequestInitializer(
        HorseApiRequestInitializer horseapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(horseapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
